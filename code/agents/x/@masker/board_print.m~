
% print board
function board_print(obj,text,present)

    % assert and default
    assert(~xor(iscell(text),iscell(present)),'board_print: error. wrong input');
    if ~iscell(text),    text    = {text};    end
    if ~iscell(present), present = {present}; end
    assert(length(text)==length(present), 'board_print: error. different lengths');
    
    % parameters
    d      = 2;
    
    % variables
    n      = length(text);
    l      = nan(1,n);
    status = cell(1,n);
    action = cell(1,n);
    
    % set strings
    for i = 1:n
        text{i}   = [text{i},':'];
        board     = present{i};
        status{i} = num2str(reshape(board(1:obj.options.n_status),obj.options.size));
        action{i} = num2str(board(end+1-obj.options.n_action:end));
        l(i)      = max([size(text{i},2) , size(status{i},2) , size(action{i},2)]);
    end
    
    text{1}
    status
    action
    
    % expand strings
    for i = 1:n
        str = text{i};   str(:,end:l(i)+d) = ' '; text{i}   = str;
        str = status{i}; str(:,end:l(i)+d) = ' '; status{i} = str;
        str = action{i}; str(:,end:l(i)+d) = ' '; action{i} = str;
    end

    text
    status
    action
    
    % concat strings
    text   = cell2mat(text);
    status = cell2mat(status);
    action = cell2mat(action);
    
    text
    status
    action
    
    % print strings
    cprintf([0,1,0],[text,'\n']);
    for i = 1:size(status,1)
        fprintf([status(i,:),'\n']);
    end
    cprintf('*black',[action,'\n']);
    
%     fprintf('status : \n');
%     status = present(1:obj.options.n_status);
%     status = reshape(status,obj.options.size);
%     disp(status);
%     fprintf('action : \n');
%     action = present(end+1-obj.options.n_action:end);
%     disp(action);
end